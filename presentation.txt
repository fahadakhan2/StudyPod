Presentation Outline 

User logs in - Ismail via Firebase (maybe social)

User interest form - Fahad 
    Explain end to end so the interests are saved via usser field 
    discovery page uses interest form to populate from db if exists

Sends to home page

User submits prompt and keyword catches (ismail)
    ismail explain keyword algo and then what happens if not found 
    Currently it is not the smartest, it returns the first instance of the keyword
    but if the podcast is already in the users audio files, then it goes to the next one

Test case (user recieves audio they do not like or is not relevent because 
keyword parser is not able to parse prompt)

Then press button to make a post request and skips keyboard validation

Post request is made and then generate podcast actually happens  
Audio Selection - Fahad

Generate Podcast Flow - 
    Gemini Request is made: returns title, summary, podcast content,
    and keywords

    The information is saved to the db 
    
    the request to playht is made (user recieves an audio based on the 
    voice chosen) 

    the audio is returned (yousef)

    **Optimizations we could have made**
    Checking the DB after the gemini call to avoid making a play ht call 
    if one of the higher quality keywords is in the database. 

The podcast is returned 
   
Podcast audio player just points to s3 (ismail)
Podcast controls (Req 5) (Fahad)

The podcast is then added to the database (Yousef)
The podcast is shown in the user's library (Yousef)
 
Discovery Page
How the discovery page is populated.(Fahad)

S3 Service (Fahad)

**Improvment**
We should have used a relational db instead of mongo db, since we actually used
relations more than not to connect our data.


